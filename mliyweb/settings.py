"""
Django settings for mliyweb project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""
'''
Copyright 2017 MLiy Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

'''
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

DJANGO_LOG_LOWLEVEL='ERROR'

LOG_LOCATION="/home/mliyapp/logs"

LAUNCH_LOG_LEVEL='ERROR'

DNS_PLUGIN="plugin"

AUTH_PLUGIN="ldapplugin"

DIRECTORY_FILE_LOCATION="scripts/ec2"

AWS_REGION="us-east-1"

S3_FILE_LOCATION=""

MANAGER_HOSTNAME = "127.0.0.1:8000"

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

AWS_S3 = 'https://s3.amazonaws.com'

# price of an EBS Volume per GB, in USD
AWS_EBS_PRICE = 0.1

S3_BUCKET = '{{{staging_bucket}}}'

# Timeouts and Retry values for updating the status
AWS_TIMEOUT = 4
AWS_MAX_RETRIES = 4

RETRY_PROGRESSION = 2
RETRY_LIMIT = 10
RETRY_DELAY = 1

# If set to True, will show the public ip instead of private ip of an instance.
DISPLAY_PUBLIC_IP = False

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '{{{django_secret_key}}}'

DEBUG = False

ALLOWED_HOSTS = ['localhost','{{{private_ip}}}','{{{public_ip}}}']

# Application definition

INSTALLED_APPS = (
	'django.contrib.admin.apps.SimpleAdminConfig',
	'django.contrib.admindocs',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'mliyweb',
)

MIDDLEWARE_CLASSES = (
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'mliyweb.auth.MliyHeaderMiddleware',
	'mliyweb.middleware.GroupConfigMiddleware',
	'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'mliyweb.urls'

AUTHENTICATION_BACKENDS = (
	'mliyweb.auth.MliyBackend',
	'django.contrib.auth.backends.ModelBackend',
)

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'mliyweb.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
	}
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'US/Eastern'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# discount we get on aws pricing
AWS_DISCOUNT = 0.0
# refresh time, in minutes
MAX_INSTANCE_CACHE_AGE = 5
# the name of the group with management privs over all other groups the
# user is a member in
MANAGER_GROUP_NAME = 'manager'

LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters' : {
         'simple': {
            'format': '%(asctime)s - %(levelname)s %(filename)s:%(lineno)d %(message)s'
            },
        },
        'handlers': {
            'console': {
                'level': DJANGO_LOG_LOWLEVEL,
                'class': 'logging.FileHandler',
                'filename' : LOG_LOCATION+'/mliyweb.log',
                'formatter': 'simple'
                },
            'launchlog' : {
                'level' : DJANGO_LOG_LOWLEVEL,
                'class' : 'logging.FileHandler',
                'filename' : LOG_LOCATION+'/mliylaunch.log',
                'formatter' : 'simple'
                },
            'authlog' : {
                'level' : DJANGO_LOG_LOWLEVEL,
                'class' : 'logging.FileHandler',
                'filename' : LOG_LOCATION+'/auth.log',
                'formatter' : 'simple'
                },
            'botolog' : {
                'level' : DJANGO_LOG_LOWLEVEL,
                'class' : 'logging.FileHandler',
                'filename' : LOG_LOCATION+'/boto.log',
                'formatter' : 'simple'
                },
             },
        'loggers': {
            'mliyweb.views': {
                'handlers': ['console'],
                'level': DJANGO_LOG_LOWLEVEL,
                'propagate': True,
                },
            'mliyweb.auth': {
                'handlers': ['authlog'],
                'level': DJANGO_LOG_LOWLEVEL,
                'propagate': True,
                },
            'mliyweb.views.SelectInstDetails': {
                'handlers': ['launchlog'],
                'level': LAUNCH_LOG_LEVEL,
                'propagate': True,
                },
            'launch_logs': {
                'handlers': ['launchlog'],
                'level': LAUNCH_LOG_LEVEL,
                'propagate': True,
                },
            'mliyweb.views.SelectEmrDetails': {
                'handlers': ['launchlog'],
                'level': LAUNCH_LOG_LEVEL,
                'propagate': True,
                },
            'django.contrib.staticfiles': {
                'handlers': ['console'],
                'level': DJANGO_LOG_LOWLEVEL,
                'propagate': True,
                },
            'boto' : {
                'handlers' : ['botolog'],
                'level' : DJANGO_LOG_LOWLEVEL,
                'propagate' : True,
            },
            'boto3' : {
                'handlers' : ['botolog'],
                'level' : DJANGO_LOG_LOWLEVEL,
                'propagate' : True,
            }
        },
}


REPLACEMENT_TOKENS = [

]
